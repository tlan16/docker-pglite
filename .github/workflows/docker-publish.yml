---
name: Docker
# yamllint disable-line rule:truthy
on:
  schedule:
    - cron: '0 14 * * *'
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]
concurrency:
  group: "${{github.repository}}-${{ github.ref_name }}"
  cancel-in-progress: true

jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-qemu-action@v3
      - uses: docker/setup-buildx-action@v3
      - uses: docker/metadata-action@v5
        id: meta
        with:
          images: ${{ secrets.DOCKER_USERNAME }}/pglite:latest
      - uses: actions/cache@v4
        id: cache
        with:
          path: cache-mount
          key: cache-mount-${{ hashFiles('Dockerfile') }}
      - uses: reproducible-containers/buildkit-cache-dance@v3
        with:
          builder: ${{ steps.setup-buildx.outputs.name }}
          cache-dir: cache-mount
          dockerfile: Dockerfile
          skip-extraction: ${{ steps.cache.outputs.cache-hit }}
      - uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}
      - uses: docker/build-push-action@v5
        with:
          platforms: linux/amd64,linux/arm64
          tags: ${{ secrets.DOCKER_USERNAME }}/pglite:latest
          cache-from: |
            type=gha
            type=registry,ref=${{ secrets.DOCKER_USERNAME }}/pglite:latest
          cache-to: type=gha,mode=max
          push: false
      - name: Tests
        run: tests/run.sh
      - name: Push images to Docker Hub
        if: github.ref == 'refs/heads/main'
        uses: docker/build-push-action@v5
        with:
          platforms: linux/amd64,linux/arm64
          tags: ${{ secrets.DOCKER_USERNAME }}/pglite:latest
          cache-from: |
            type=gha
            type=registry,ref=${{ secrets.DOCKER_USERNAME }}/pglite:latest
          cache-to: type=gha,mode=max
          push: true
      - name: Update Docker Hub description
        if: github.ref == 'refs/heads/main'
        uses: peter-evans/dockerhub-description@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}
          repository: ${{ secrets.DOCKER_USERNAME }}/pglite
          short-description: 'PGlite server packaged with Deno'
